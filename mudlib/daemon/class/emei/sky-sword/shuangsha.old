 // tie@fengyun
#include <ansi.h>
#include <combat.h>
inherit SSERVER;
int perform(object me, object target)
{
        string dodskill,msg;
        int extra, blade;
//        if (me->query("class")!="emei")
//                return notify_fail ("只有峨嵋弟子才能使用［刀剑双杀］。\n");
        extra = me->query_skill("sky-sword",1);
        if (me->query("class")=="emei") extra*=3;

        if ( extra < 150) 
                return notify_fail("你的［蓝天剑法］还不够纯熟！\n");
        blade = me->query_skill("shenji-blade",1);
        if ( blade < 150) 
                return notify_fail("你的［神机刀法］还不够纯熟！\n");
        dodskill = (string) me->query_skill_mapped("blade");
        if ( dodskill != "shenji-blade")
                return notify_fail("［刀剑双杀］需要神机刀法和蓝天剑法的配合！\n");
        if( !target ) target = offensive_target(me);
        if( !target
        ||      !target->is_character()
        ||      !me->is_fighting(target) )
                return notify_fail("［刀剑双杀］只能对战斗中的对手使用。\n");
        
        blade = me->query_skill("shenji-blade",1);
        if (me->query("class")!="emei") blade/=2;
        
        msg = HIR  "$N双手挥舞，使出七七四十九式『刀剑双杀』！\n"+NOR;
        if(random((int)me->query("combat_exp")*5) >= (int)target->query("combat_exp")/2)
        {
        me->add_temp("apply/attack",blade*5);
        me->add_temp("apply/damage",extra*4);     
        message_vision(msg+"\n",me,target);
        message_vision( BLU " $N面对变幻的招式，一下子无所适从！\n"+NOR"只见杀气重重，"+HIC"刀"+HIB"即"+HIM"是"+HIW"剑"+NOR"，"+CYN"剑"+GRN"即"+MAG"是"+RED"刀"+HIY"！" NOR,target);
        msg="一瞬间，刀光剑影连绵不断。";
        COMBAT_D->do_attack(me,target,TYPE_PERFORM,msg);
        target->receive_wound("sen",extra*3);
        me->add_temp("apply/damage",-extra*4);    
        me->add_temp("apply/attack",-blade*5);
        target->start_busy(3);
        }       
        else{
           msg= HIR  "$N双手挥舞，使出七七四十九式『刀剑双杀』！\n\n"+NOR"只见杀气重重，"+HIC"刀"+HIB"即"+HIM"是"+HIW"剑"+NOR"，"+CYN"剑"+GRN"即"+MAG"是"+RED"刀"+HIY"！" NOR;
           COMBAT_D->do_attack(me,target, TYPE_PERFORM,msg);
        }
        me->start_busy(2);
        return 1;
}     
